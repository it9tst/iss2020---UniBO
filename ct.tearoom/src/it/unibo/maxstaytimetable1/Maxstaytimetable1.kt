/* Generated by AN DISI Unibo */ 
package it.unibo.maxstaytimetable1

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Maxstaytimetable1 ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		
				val MaxStayTime 	= 100000L
				var StartTime 		= 0L
				var TimerDone 		= 0L
				var TimerGlobalDone = 0L
				var TimeAfterResume = 0L
				var TimerToReturn   = 0L
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("MAXSTAYTIMETABLE1 | Start")
					}
					 transition( edgeName="goto",targetState="wait", cond=doswitch() )
				}	 
				state("wait") { //this:State
					action { //it:State
						println("MAXSTAYTIMETABLE1 | wait")
					}
					 transition(edgeName="t050",targetState="newTimer",cond=whenDispatch("startTimer"))
					transition(edgeName="t051",targetState="endWork",cond=whenDispatch("end"))
				}	 
				state("newTimer") { //this:State
					action { //it:State
						println("MAXSTAYTIMETABLE1 | newTimer")
						StartTime = getCurrentTime()
						
									TimerGlobalDone = 0
						stateTimer = TimerActor("timer_newTimer", 
							scope, context!!, "local_tout_maxstaytimetable1_newTimer", MaxStayTime )
					}
					 transition(edgeName="t152",targetState="timerExpired",cond=whenTimeout("local_tout_maxstaytimetable1_newTimer"))   
					transition(edgeName="t153",targetState="stop",cond=whenDispatch("stopTimer"))
					transition(edgeName="t154",targetState="returnTimerDone",cond=whenRequest("maxStayTimerLeftRequestToTable"))
				}	 
				state("stop") { //this:State
					action { //it:State
						println("MAXSTAYTIMETABLE1 | stop")
						TimerDone = getDuration(StartTime)
						
									TimerGlobalDone += TimerDone
					}
					 transition(edgeName="t255",targetState="resume",cond=whenDispatch("resumeTimer"))
					transition(edgeName="t256",targetState="newTimer",cond=whenDispatch("startTimer"))
					transition(edgeName="t257",targetState="returnTimerDoneStop",cond=whenRequest("maxStayTimerLeftRequestToTable"))
				}	 
				state("resume") { //this:State
					action { //it:State
						println("MAXSTAYTIMETABLE1 | resume")
						
									TimeAfterResume = MaxStayTime - TimerGlobalDone
						StartTime = getCurrentTime()
						stateTimer = TimerActor("timer_resume", 
							scope, context!!, "local_tout_maxstaytimetable1_resume", TimeAfterResume )
					}
					 transition(edgeName="t358",targetState="timerExpired",cond=whenTimeout("local_tout_maxstaytimetable1_resume"))   
					transition(edgeName="t359",targetState="stop",cond=whenDispatch("stopTimer"))
					transition(edgeName="t360",targetState="returnTimerDone",cond=whenRequest("maxStayTimerLeftRequestToTable"))
				}	 
				state("timerExpired") { //this:State
					action { //it:State
						println("MAXSTAYTIMETABLE1 | timerExpired")
						forward("maxStayTimerExpired", "maxStayTimerExpired(1)" ,"maxstaytime" ) 
					}
					 transition( edgeName="goto",targetState="wait", cond=doswitch() )
				}	 
				state("returnTimerDone") { //this:State
					action { //it:State
						println("MAXSTAYTIMETABLE1 | returnTimerDone")
						TimerDone = getDuration(StartTime)
						 
									TimerGlobalDone += TimerDone
									TimerToReturn = MaxStayTime - TimerGlobalDone
						answer("maxStayTimerLeftRequestToTable", "maxStayTimerLeftReplyFromTable", "maxStayTimerLeftReplyFromTable($TimerToReturn)"   )  
					}
					 transition( edgeName="goto",targetState="resume", cond=doswitch() )
				}	 
				state("returnTimerDoneStop") { //this:State
					action { //it:State
						println("MAXSTAYTIMETABLE1 | returnTimerDoneStop")
						 
									TimerToReturn = MaxStayTime - TimerGlobalDone
						answer("maxStayTimerLeftRequestToTable", "maxStayTimerLeftReplyFromTable", "maxStayTimerLeftReplyFromTable($TimerToReturn)"   )  
					}
					 transition(edgeName="t461",targetState="resume",cond=whenDispatch("resumeTimer"))
					transition(edgeName="t462",targetState="newTimer",cond=whenDispatch("startTimer"))
					transition(edgeName="t463",targetState="returnTimerDoneStop",cond=whenRequest("maxStayTimerLeftRequestToTable"))
				}	 
				state("endWork") { //this:State
					action { //it:State
						println("MAXSTAYTIMETABLE1 | End work")
						terminate(0)
					}
				}	 
			}
		}
}
