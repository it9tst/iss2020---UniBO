System barman

// MESSAGES
// Message between barman - waiter
Dispatch takeOrder  : takeOrder (ID, ORD)
Dispatch orderReady	: orderReady (PAYLOAD)
Dispatch end : end (PAYLOAD)


// CONTEXT
Context ctxtearoom ip [host="localhost" port=9901]
Context ctxbarman ip [host="localhost" port=9904]

ExternalQActor waiter context ctxtearoom

QActor barman context ctxbarman {
	[#
		var List = arrayListOf<Int, arrayListOf<String>()>()
	#]			
	
	State s0 initial {
		// Initial state
		println("Barman start")
	}
	Goto waitOrder
	
	State waitOrder {
		// Barman wait order
		println("Barman wait order")
	}
	Transition t0 	whenMsg takeOrder -> getOrder
					whenMsg end -> endWork
	
	State getOrder{
		// Get order from waiter
		println("Barman is preparing order... ")
		
		onMsg(takeOrder : takeOrder(ID, ORD)){
			[# List.add($payloadArg(0), $payloadArg(1)) #]
		}
	}
	Goto orderFinish
	
	State orderFinish{
		println("The order is ready!")
		//send dispatch to waiter
		forward waiter -m orderReady : orderReady (READY)
		[# List.remove() #]
	}
	Transition t1 whenMsg orderReady -> waitOrder
	
	State endWork {
		// Client end work
		println("Barman end work")
		terminate 0
	}
}