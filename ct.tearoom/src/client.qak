System -msglog client

// MESSAGES CLIENT
// Message between client - smartbell
Request enter_request_client			: enter_request_client (TEMP)
Reply   enter_reply_from_smartbell		: enter_reply_from_smartbell (ID)

// Message between client - waiter
Dispatch client_ready_to_order : client_ready_to_order (ID)
Dispatch client_payment : client_payment (ID)



// CONTEXT
Context ctxclient ip [host="127.0.0.1" port=50820] 
Context ctxtearoom ip [host="localhost" port=50810]

ExternalQActor waiter context ctxtearoom
ExternalQActor smartbell context ctxtearoom


QActor client context ctxclient {
	[#
		var ID = 0
		var Client_temp = 36.0
	#]
	
	State s0 initial {
		// Client initial state
		println("CLIENT | Start")
		updateResource [# "START" #]
	}
	Goto ringBell
	
	State ringBell {
		// Client rings the doorbell
		println("CLIENT | Rings the doorbell")
		updateResource [# "ringBell" #]
		
		request smartbell -m enter_request_client : enter_request_client ($Client_temp)
	}
	Transition t0 	whenReply enter_reply_from_smartbell -> enter
	
	State enter {
		// Client enter
		onMsg(enter_reply_from_smartbell : enter_reply_from_smartbell(ID)){
			println("CLIENT | ID: ${payloadArg(0)} | Enter")
			updateResource [# "enter" #]
			[# ID = payloadArg(0).toInt() #]
		}
	}
	Goto order
	
	State order {
		// Client would like to order
		println("CLIENT | ID: ${payloadArg(0)} | Would like to order")
		updateResource [# "order" #]
		forward waiter -m client_ready_to_order : client_ready_to_order($ID)
	}
	Goto pay
	
	State pay {
		// Client would like to pay
		println("CLIENT | ID: ${payloadArg(0)} | Would like to pay")
		updateResource [# "pay" #]
		forward waiter -m client_payment : client_payment($ID)
	}
	Goto exit
	
	State exit {
		// Client exit
		println("CLIENT || ID: ${payloadArg(0)} | Exit")
		updateResource [# "exit" #]
	}
	Goto endWork

	State endWork {
		// Client end work
		println("CLIENT | ID: ${payloadArg(0)} | End work")
		updateResource [# "endWork" #]
		terminate 0
	}
}









