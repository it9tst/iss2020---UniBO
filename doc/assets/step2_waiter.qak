System -msglog tearoom

// MESSAGES SMARTBELL
// Message between smartbell - waiter
Request smartbell_enter_request	: smartbell_enter_request (PAYLOAD)
Reply	client_accept_with_time : client_accept_with_time (PAYLOAD)

Dispatch end : end (PAYLOAD)


Context ctxtearoom ip [host="localhost" port=50810]


QActor waiter context ctxtearoom {

	State s0 initial {
		// Initial state
		println("WAITER | Start")
	}
	Goto rest
	
	State rest {
		// Waiter is at home
		println("WAITER | Rest")
	}
	Transition t0 	whenRequest smartbell_enter_request -> accept
					whenMsg end -> endWork

	State accept {
		// Waiter accept the client

		println("WAITER | The waiter verifies that the tables are occupied")

		forward waiter -m inform_maxwaittime : inform_maxwaittime (PAYLOAD)
	}
	Transition t1	whenMsg inform_maxwaittime -> inform
	
	State inform {
		// Waiter inform the client about the maximum waiting time if there is no tableclean
		println("WAITER | Inform the client about the maximum waiting time: MAXWAITINGTIME")

		onMsg(inform_maxwaittime : inform_maxwaittime (PAYLOAD)){
			replyTo smartbell_enter_request with client_accept_with_time : client_accept_with_time (MAXWAITINGTIME)
		}
	}
	Goto rest
	
	State endWork {
		// Waiter end work
		println("WAITER | End work")
		updateResource [# "endWork" #]
		terminate 0
	}
}