System -msglog tearoom

// MESSAGES SMARTBELL
// Message between smartbell - client
Request  enter_request_client					: enter_request_client (PAYLOAD)
Reply    enter_reply_from_smartbell				: enter_reply_from_smartbell (PAYLOAD)

// Message between smartbell - waiter
Request smartbell_enter_request	: smartbell_enter_request (PAYLOAD)		
Reply   client_accept			: client_accept (PAYLOAD)


Dispatch end : end (PAYLOAD)


Context ctxtearoom ip [host="localhost" port=50810]


QActor smartbell context ctxtearoom {
	
	State s0 initial {
		// Smartbell initial state
		println("SMARTBELL | Start")
	}
	Goto waitRing
	
	State waitRing {
		// Smartbell wait ring
		println("SMARTBELL | Wait ring")
	}
	Transition t0 	whenRequest enter_request_client -> checkTempClient
					whenMsg end -> endWork
	
	State checkTempClient {
		// Smartbell check temp client
		println("SMARTBELL | Check temp client")

		println("SMARTBELL | The smartbell detects the client's body temperature and checks if it is suitable")

		println("SMARTBELL | The smartbell verifies that the temperature is suitable")

		println("SMARTBELL | The client can enter - Temp Ok")
		request waiter -m smartbell_enter_request : smartbell_enter_request (PAYLOAD)
	}
	Transition t1	whenReply client_accept -> clientEnter

	State clientEnter{
		// Smartbell reply to client
		println("SMARTBELL | The client can enter")

		onMsg(client_accept : client_accept (PAYLOAD)){
			replyTo enter_request_client with enter_reply_from_smartbell : enter_reply_from_smartbell (PAYLOAD)
		}
	}
	Goto waitRing

	State endWork {
		// Smartbell end work
		println("SMARTBELL | End work")
		terminate 0
	}
}